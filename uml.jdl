




// Friends feature
/**
 * Each Friendship is related to two users. Friendships are setup by backend
 * code when FriendRequests are accepted.
 */
entity Friendship {
    from Instant required
}
/**
 * Each user can send a friend request, which is related to the user
 * initiating it, and who it is for.
 */
entity FriendRequest {
    timeStamp Instant required
}
/**
 * The system creates friend recommendations based on how similar two
 * AppUsers' listening statistics are. The timestamp allows them to be
 * recalculated when statistics are recalculated.
 */
entity FriendRecommendation {
    similarity Float min(0.0) max(1.0) required
    lastUpdated LocalDate required
}

relationship OneToOne {
    /** Each FriendRecommendation relates to the AppUser recommended. */
    FriendRecommendation{aboutAppUser required} to AppUser{aboutFriendRecommendation}

    /** Each FriendRequest is associated with a particular user, who initiated it. */
    FriendRequest{initiatingAppUser requied} to AppUser{intitiatingFriendRequest}

    /** Friendships relate to two AppUsers: initiating, and accepting users */
    Friendship{friendInitiating required} to AppUser{friendshipInitiated}
    /** Friendships relate to two AppUsers: initiating, and accepting users */
    Friendship{friendAccepting  required} to AppUser{friendshipAccepted}
}
relationship OneToMany {
    AppUser{friend} to Friendship
    AppUser{toFriendRequest} to FriendRequest{toAppUser}
    AppUser{forFriendRecommendation} to FriendRecommendation{forAppUser}
    /** Blocked users are related to the user who blocked them. */
    AppUser{blockedUser} to AppUser{blockedByUser}
}





// Personal Insights
entity Stream {
    playedAt Instant required
}
entity Song {
    spotifyID String required unique
    name String required
    imageURL String
    releaseDate Instant
    duration Duration required
    // audio features
    acousticness Float min(0.0) max(1.0)
    danceability Float min(0.0) max(1.0)
    energy Float min(0.0) max(1.0)
    instrumentalness Float min(0.0) max(1.0)
    musicalKey Integer  // DANGER: key is a reserved keyword in sql (obviously)
    liveness Float min(0.0) max(1.0)
    loudness Float min(0.0) max(1.0)
    mode Boolean
    speechiness Float min(0.0) max(1.0)
    tempo Float
    timeSignature Integer
    valence Float min(0.0) max(1.0)
}
entity Artist {
    spotifyID String required unique
    name String required
    imageURL String
}
entity Album {
    spotifyID String required unique
    name String required
    imageURL String
    releaseDate Instant
    albumType AlbumType
}
enum AlbumType {
    ALBUM,
    SINGLE,
    COMPILATION
}
entity Genre {
    name String
}
entity Playlist {
    spotifyID String required unique
    name String required
    imageURL String
}

relationship OneToMany {
    AppUser{playlist} to Playlist{appUser}
    AppUser{stream} to Stream{appUser}  // Each user will listen to many songs.
}
relationship ManyToOne {
    Stream{song required} to Song{stream}  // Each stream is required to have one song.
    Song{album} to Album
}
relationship ManyToMany {
    Playlist{song} to Song{playlist}
    Artist{song} to Song{artist}
    Artist{album} to Album{artist}
    Artist{genre} to Genre{artist}
}





// Profile Feature
/** Profile information about a user, identifying them. */
entity AppUser {
    spotifyID String required
    name String required
    avatarURL String
    bio TextBlob
    spotifyUsername String required
}
entity UserPreferences {
    profilePrivacy Privacy
    dataPrivacy Privacy
    visualMode Boolean
    contrastMode Boolean
}
enum Privacy {
    PUBLIC,
    FRIENDS,
    FRIENDS_OF_FRIENDS,
    PRIVATE
}
entity SpotifyToken {
    accessToken String required
    tokenType String required
    scope String required
    expires Instant required  // Calculated from expiresIn given by API request
    refreshToken String required
}

relationship OneToOne {
    AppUser{userPreferences required} to UserPreferences{appUser required}
    AppUser{spotifyToken required} to SpotifyToken{appUser required}
}





// Homefeed


